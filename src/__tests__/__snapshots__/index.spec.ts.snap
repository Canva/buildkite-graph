// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`buildkite-graph agents can be defined dot 1`] = `
"digraph \\"whatever\\" {
  graph [ compound =true ];
subgraph cluster_0 {
  graph [ color = \\"black\\" ];
  \\"<noop>\\" [ color = \\"grey\\" ];
}

}
"
`;

exports[`buildkite-graph agents can be defined json 1`] = `
Object {
  "steps": Array [
    Object {
      "agents": Object {
        "npm": "true",
      },
      "command": "noop",
    },
  ],
}
`;

exports[`buildkite-graph agents can be defined yaml 1`] = `
"steps:
  - command: noop
    agents:
      npm: 'true'
"
`;

exports[`buildkite-graph artifact_paths can be defined dot 1`] = `
"digraph \\"whatever\\" {
  graph [ compound =true ];
subgraph cluster_0 {
  graph [ color = \\"black\\" ];
  \\"<noop>\\" [ color = \\"grey\\" ];
}

}
"
`;

exports[`buildkite-graph artifact_paths can be defined json 1`] = `
Object {
  "steps": Array [
    Object {
      "artifact_paths": Array [
        "logs/**/*",
        "coverage/**/*",
      ],
      "command": "noop",
    },
  ],
}
`;

exports[`buildkite-graph artifact_paths can be defined yaml 1`] = `
"steps:
  - command: noop
    artifact_paths:
      - logs/**/*
      - coverage/**/*
"
`;

exports[`buildkite-graph branches can be defined dot 1`] = `
"digraph \\"whatever\\" {
  graph [ compound =true ];
subgraph cluster_0 {
  graph [ color = \\"black\\" ];
  \\"<noop>\\" [ color = \\"grey\\" ];
}

}
"
`;

exports[`buildkite-graph branches can be defined json 1`] = `
Object {
  "steps": Array [
    Object {
      "branches": "!release/* master stable/*",
      "command": "noop",
    },
  ],
}
`;

exports[`buildkite-graph branches can be defined yaml 1`] = `
"steps:
  - command: noop
    branches: '!release/* master stable/*'
"
`;

exports[`buildkite-graph concurrency can be defined dot 1`] = `
"digraph \\"whatever\\" {
  graph [ compound =true ];
subgraph cluster_0 {
  graph [ color = \\"black\\" ];
  \\"<noop>\\" [ color = \\"grey\\" ];
}

}
"
`;

exports[`buildkite-graph concurrency can be defined json 1`] = `
Object {
  "steps": Array [
    Object {
      "command": "noop",
      "concurrency": 3,
      "concurrency_group": "my-app/deploy",
    },
  ],
}
`;

exports[`buildkite-graph concurrency can be defined yaml 1`] = `
"steps:
  - command: noop
    concurrency: 3
    concurrency_group: my-app/deploy
"
`;

exports[`buildkite-graph continue on failure multiple subsequent always-executed subsequent steps do not get an additional wait step dot 1`] = `
"digraph \\"test\\" {
  graph [ compound =true ];
subgraph cluster_0 {
  graph [ color = \\"black\\" ];
  \\"<command.sh>\\" [ color = \\"grey\\" ];
}

subgraph cluster_1 {
  graph [ color = \\"black\\" ];
  \\"<echo This runs regardless of the success or failure>\\" [ color = \\"grey\\" ];
  \\"<echo This runs regardless of the success or failure 2>\\" [ color = \\"grey\\" ];
  \\"<echo This runs regardless of the success or failure 3>\\" [ color = \\"grey\\" ];
}

  \\"<command.sh>\\";
  \\"<echo This runs regardless of the success or failure>\\";
  \\"<echo This runs regardless of the success or failure 2>\\";
  \\"<echo This runs regardless of the success or failure 3>\\";
  \\"<command.sh>\\" -> \\"<echo This runs regardless of the success or failure>\\" [ ltail = \\"cluster_0\\", lhead = \\"cluster_1\\" ];
  \\"<command.sh>\\" -> \\"<echo This runs regardless of the success or failure 2>\\" [ ltail = \\"cluster_0\\", lhead = \\"cluster_1\\" ];
  \\"<command.sh>\\" -> \\"<echo This runs regardless of the success or failure 3>\\" [ ltail = \\"cluster_0\\", lhead = \\"cluster_1\\" ];
}
"
`;

exports[`buildkite-graph continue on failure multiple subsequent always-executed subsequent steps do not get an additional wait step json 1`] = `
Object {
  "steps": Array [
    Object {
      "command": "command.sh",
    },
    Object {
      "continue_on_failure": true,
      "wait": null,
    },
    Object {
      "command": "echo This runs regardless of the success or failure",
    },
    Object {
      "command": "echo This runs regardless of the success or failure 2",
    },
    Object {
      "command": "echo This runs regardless of the success or failure 3",
    },
  ],
}
`;

exports[`buildkite-graph continue on failure multiple subsequent always-executed subsequent steps do not get an additional wait step yaml 1`] = `
"steps:
  - command: command.sh
  - wait: ~
    continue_on_failure: true
  - command: echo This runs regardless of the success or failure
  - command: echo This runs regardless of the success or failure 2
  - command: echo This runs regardless of the success or failure 3
"
`;

exports[`buildkite-graph continue on failure subsequent depending steps that are not always executed get an additional wait step dot 1`] = `
"digraph \\"test\\" {
  graph [ compound =true ];
subgraph cluster_0 {
  graph [ color = \\"black\\" ];
  \\"<command.sh>\\" [ color = \\"grey\\" ];
}

subgraph cluster_1 {
  graph [ color = \\"black\\" ];
  \\"<echo This runs regardless of the success or failure>\\" [ color = \\"grey\\" ];
  \\"<echo The command passed>\\" [ color = \\"grey\\" ];
}

  \\"<command.sh>\\";
  \\"<echo This runs regardless of the success or failure>\\";
  \\"<echo The command passed>\\";
  \\"<command.sh>\\" -> \\"<echo This runs regardless of the success or failure>\\" [ ltail = \\"cluster_0\\", lhead = \\"cluster_1\\" ];
  \\"<command.sh>\\" -> \\"<echo The command passed>\\" [ ltail = \\"cluster_0\\", lhead = \\"cluster_1\\" ];
}
"
`;

exports[`buildkite-graph continue on failure subsequent depending steps that are not always executed get an additional wait step json 1`] = `
Object {
  "steps": Array [
    Object {
      "command": "command.sh",
    },
    Object {
      "continue_on_failure": true,
      "wait": null,
    },
    Object {
      "command": "echo This runs regardless of the success or failure",
    },
    Object {
      "wait": null,
    },
    Object {
      "command": "echo The command passed",
    },
  ],
}
`;

exports[`buildkite-graph continue on failure subsequent depending steps that are not always executed get an additional wait step yaml 1`] = `
"steps:
  - command: command.sh
  - wait: ~
    continue_on_failure: true
  - command: echo This runs regardless of the success or failure
  - wait: ~
  - command: echo The command passed
"
`;

exports[`buildkite-graph general serialization complex dot 1`] = `
"digraph \\"web-build-editor\\" {
  graph [ compound =true ];
subgraph cluster_0 {
  graph [ color = \\"black\\" ];
  \\"Build Editor\\" [ color = \\"grey\\" ];
  \\"Test Editor\\" [ color = \\"grey\\" ];
}

subgraph cluster_1 {
  graph [ color = \\"black\\" ];
  \\"Annotate failures\\" [ color = \\"grey\\" ];
  \\"Upload coverage\\" [ color = \\"grey\\" ];
  \\"Integration tests\\" [ color = \\"grey\\" ];
}

subgraph cluster_2 {
  graph [ color = \\"black\\" ];
  \\":saucelabs: Integration tests\\" [ color = \\"grey\\" ];
  \\"Visreg baseline update\\" [ color = \\"grey\\" ];
}

subgraph cluster_3 {
  graph [ color = \\"black\\" ];
  \\"<web/bin/buildkite/run_web_step.sh annotate-cucumber-failed-cases>\\" [ color = \\"grey\\" ];
  \\"Copy to deploy bucket\\" [ color = \\"grey\\" ];
}

subgraph cluster_4 {
  graph [ color = \\"black\\" ];
  \\"Update checkpoint\\" [ color = \\"grey\\" ];
  \\"Deploy to tech\\" [ color = \\"grey\\" ];
  \\"Deploy to usertesting\\" [ color = \\"grey\\" ];
}

  \\"Test Editor\\";
  \\"Annotate failures\\";
  \\"Upload coverage\\";
  \\"Build Editor\\";
  \\"Integration tests\\";
  \\":saucelabs: Integration tests\\";
  \\"Visreg baseline update\\";
  \\"<web/bin/buildkite/run_web_step.sh annotate-cucumber-failed-cases>\\";
  \\"Copy to deploy bucket\\";
  \\"Update checkpoint\\";
  \\"Deploy to tech\\";
  \\"web-deploy\\" [ shape =Msquare ];
  \\"Deploy to usertesting\\";
  \\"Test Editor\\" -> \\"Annotate failures\\" [ ltail = \\"cluster_0\\", lhead = \\"cluster_1\\" ];
  \\"Test Editor\\" -> \\"Upload coverage\\" [ ltail = \\"cluster_0\\", lhead = \\"cluster_1\\" ];
  \\"Build Editor\\" -> \\"Integration tests\\" [ ltail = \\"cluster_0\\", lhead = \\"cluster_1\\" ];
  \\"Integration tests\\" -> \\":saucelabs: Integration tests\\" [ ltail = \\"cluster_1\\", lhead = \\"cluster_2\\" ];
  \\"Integration tests\\" -> \\"Visreg baseline update\\" [ ltail = \\"cluster_1\\", lhead = \\"cluster_2\\" ];
  \\"Integration tests\\" -> \\"<web/bin/buildkite/run_web_step.sh annotate-cucumber-failed-cases>\\" [ ltail = \\"cluster_2\\", lhead = \\"cluster_3\\" ];
  \\":saucelabs: Integration tests\\" -> \\"<web/bin/buildkite/run_web_step.sh annotate-cucumber-failed-cases>\\" [ ltail = \\"cluster_2\\", lhead = \\"cluster_3\\" ];
  \\":saucelabs: Integration tests\\" -> \\"Copy to deploy bucket\\" [ ltail = \\"cluster_2\\", lhead = \\"cluster_3\\" ];
  \\"Copy to deploy bucket\\" -> \\"Update checkpoint\\" [ ltail = \\"cluster_3\\", lhead = \\"cluster_4\\" ];
  \\"Copy to deploy bucket\\" -> \\"Deploy to tech\\" [ ltail = \\"cluster_3\\", lhead = \\"cluster_4\\" ];
  \\"Deploy to tech\\" -> \\"web-deploy\\" [ label = \\"triggers\\" ];
  \\"Copy to deploy bucket\\" -> \\"Deploy to usertesting\\" [ ltail = \\"cluster_3\\", lhead = \\"cluster_4\\" ];
  \\"Deploy to usertesting\\" -> \\"web-deploy\\" [ label = \\"triggers\\" ];
}
"
`;

exports[`buildkite-graph general serialization complex json 1`] = `
Object {
  "steps": Array [
    Object {
      "command": "web/bin/buildkite/run_web_step.sh build editor",
      "label": "Build Editor",
    },
    Object {
      "command": "web/bin/buildkite/run_web_step.sh test editor",
      "label": "Test Editor",
    },
    Object {
      "continue_on_failure": true,
      "wait": null,
    },
    Object {
      "label": "Annotate failures",
      "plugins": Array [
        Object {
          "bugcrowd/test-summary#v1.5.0": Object {
            "inputs": Array [
              Object {
                "artifact_path": "web/target/htmllint-*.txt",
                "label": ":htmllint: HTML lint",
                "type": "oneline",
              },
            ],
          },
        },
        Object {
          "detect-clowns#v1.0.0": null,
        },
      ],
    },
    Object {
      "command": "web/bin/buildkite/run_web_step.sh deploy-report coverage editor",
      "label": "Upload coverage",
    },
    Object {
      "wait": null,
    },
    Object {
      "command": "web/bin/buildkite/run_web_step.sh run-integration-tests local editor chrome",
      "label": "Integration tests",
      "parallelism": 8,
    },
    Object {
      "wait": null,
    },
    Object {
      "command": "web/bin/buildkite/run_web_step.sh run-integration-tests saucelabs editor safari",
      "label": ":saucelabs: Integration tests",
      "parallelism": 8,
      "plugins": Array [
        Object {
          "sauce-connect-plugin": null,
        },
      ],
    },
    Object {
      "command": "web/bin/buildkite/run_web_step.sh run-visual-regression editor",
      "label": "Visreg baseline update",
    },
    Object {
      "continue_on_failure": true,
      "wait": null,
    },
    Object {
      "command": "web/bin/buildkite/run_web_step.sh annotate-cucumber-failed-cases",
    },
    Object {
      "wait": null,
    },
    Object {
      "command": "web/bin/buildkite/run_web_step.sh copy-to-deploy-bucket editor",
      "label": "Copy to deploy bucket",
    },
    Object {
      "wait": null,
    },
    Object {
      "command": "production/test/jobs/advance_branch.sh \\"checkpoint/web/green/editor\\"",
      "label": "Update checkpoint",
    },
    Object {
      "build": Object {
        "env": Object {
          "FLAVOR": "tech",
          "RELEASE_PATH": "some/path/",
        },
      },
      "trigger": "web-deploy",
    },
    Object {
      "build": Object {
        "env": Object {
          "FLAVOR": "usertesting",
          "RELEASE_PATH": "some/path/",
        },
      },
      "trigger": "web-deploy",
    },
  ],
}
`;

exports[`buildkite-graph general serialization complex yaml 1`] = `
"steps:
  - label: Build Editor
    command: web/bin/buildkite/run_web_step.sh build editor
  - label: Test Editor
    command: web/bin/buildkite/run_web_step.sh test editor
  - wait: ~
    continue_on_failure: true
  - label: Annotate failures
    plugins:
      - 'bugcrowd/test-summary#v1.5.0':
          inputs:
            - label: ':htmllint: HTML lint'
              artifact_path: web/target/htmllint-*.txt
              type: oneline
      - 'detect-clowns#v1.0.0': ~
  - label: Upload coverage
    command: web/bin/buildkite/run_web_step.sh deploy-report coverage editor
  - wait: ~
  - label: Integration tests
    command: >-
      web/bin/buildkite/run_web_step.sh run-integration-tests local editor
      chrome
    parallelism: 8
  - wait: ~
  - label: ':saucelabs: Integration tests'
    command: >-
      web/bin/buildkite/run_web_step.sh run-integration-tests saucelabs editor
      safari
    parallelism: 8
    plugins:
      - sauce-connect-plugin: ~
  - label: Visreg baseline update
    command: web/bin/buildkite/run_web_step.sh run-visual-regression editor
  - wait: ~
    continue_on_failure: true
  - command: web/bin/buildkite/run_web_step.sh annotate-cucumber-failed-cases
  - wait: ~
  - label: Copy to deploy bucket
    command: web/bin/buildkite/run_web_step.sh copy-to-deploy-bucket editor
  - wait: ~
  - label: Update checkpoint
    command: production/test/jobs/advance_branch.sh \\"checkpoint/web/green/editor\\"
  - trigger: web-deploy
    build:
      env:
        FLAVOR: tech
        RELEASE_PATH: some/path/
  - trigger: web-deploy
    build:
      env:
        FLAVOR: usertesting
        RELEASE_PATH: some/path/
"
`;

exports[`buildkite-graph general serialization simple dot 1`] = `
"digraph \\"web-deploy\\" {
  graph [ compound =true ];
subgraph cluster_0 {
  graph [ color = \\"black\\" ];
  \\"Deploy\\" [ color = \\"grey\\" ];
}

}
"
`;

exports[`buildkite-graph general serialization simple json 1`] = `
Object {
  "env": Object {
    "DEBUG": true,
    "USE_COLOR": 1,
  },
  "steps": Array [
    Object {
      "command": "buildkite/deploy_web.sh",
      "label": "Deploy",
    },
  ],
}
`;

exports[`buildkite-graph general serialization simple yaml 1`] = `
"env:
  USE_COLOR: 1
  DEBUG: true
steps:
  - label: Deploy
    command: buildkite/deploy_web.sh
"
`;

exports[`buildkite-graph timeouts commands with timeouts set step timeout total dot 1`] = `
"digraph \\"test\\" {
  graph [ compound =true ];
subgraph cluster_0 {
  graph [ color = \\"black\\" ];
  \\"<yarn install && yarn test>\\" [ color = \\"grey\\" ];
}

}
"
`;

exports[`buildkite-graph timeouts commands with timeouts set step timeout total json 1`] = `
Object {
  "steps": Array [
    Object {
      "command": Array [
        "yarn install",
        "yarn test",
      ],
      "timeout": 20,
    },
  ],
}
`;

exports[`buildkite-graph timeouts commands with timeouts set step timeout total yaml 1`] = `
"steps:
  - command:
      - yarn install
      - yarn test
    timeout: 20
"
`;

exports[`buildkite-graph timeouts one infinite timeout will cancel out the others dot 1`] = `
"digraph \\"test\\" {
  graph [ compound =true ];
subgraph cluster_0 {
  graph [ color = \\"black\\" ];
  \\"<yarn install && yarn test>\\" [ color = \\"grey\\" ];
}

}
"
`;

exports[`buildkite-graph timeouts one infinite timeout will cancel out the others json 1`] = `
Object {
  "steps": Array [
    Object {
      "command": Array [
        "yarn install",
        "yarn test",
      ],
    },
  ],
}
`;

exports[`buildkite-graph timeouts one infinite timeout will cancel out the others yaml 1`] = `
"steps:
  - command:
      - yarn install
      - yarn test
"
`;

exports[`buildkite-graph timeouts step timeout total trumps commands dot 1`] = `
"digraph \\"test\\" {
  graph [ compound =true ];
subgraph cluster_0 {
  graph [ color = \\"black\\" ];
  \\"<yarn install && yarn test>\\" [ color = \\"grey\\" ];
}

}
"
`;

exports[`buildkite-graph timeouts step timeout total trumps commands json 1`] = `
Object {
  "steps": Array [
    Object {
      "command": Array [
        "yarn install",
        "yarn test",
      ],
      "timeout": 2,
    },
  ],
}
`;

exports[`buildkite-graph timeouts step timeout total trumps commands yaml 1`] = `
"steps:
  - command:
      - yarn install
      - yarn test
    timeout: 2
"
`;
